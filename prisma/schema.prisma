// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Home {
  id                  String @id @default(auto()) @map("_id") @db.ObjectId
  address             String
  numberOfBedrooms    String
  numberOfBathrooms   Float
  city                String
  listedDate          DateTime @default(now())
  price               Float
  landSize            Float
  propertyType        PropertyType
  createAt            DateTime @default(now())
  updatedAt           DateTime @updatedAt
  Images              Image[]
  realtor             User @relation(fields: [realtorId], references: [id])
  realtorId           String @db.ObjectId
  messages            Message[]

  @@map("homes")
}

model Image {
  id                  String @id @default(auto()) @map("_id") @db.ObjectId
  url                 String
  createAt            DateTime @default(now())
  updatedAt           DateTime @updatedAt
  home                Home @relation(fields: [homeId], references: [id])
  homeId              String @db.ObjectId
}

model User {
  id                  String @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  email               String @unique
  phoneNumber         String
  password            String
  createAt            DateTime @default(now())
  updatedAt           DateTime @updatedAt
  userType            UserType
  homes               Home[]
  //buyer messages
  buyerMessages       Message[] @relation("BuyerMessages")
  //realtor messages
  realtorMessages     Message[] @relation("RealtorMessages")
}

model Message {
  id                  String @id @default(auto()) @map("_id") @db.ObjectId
  message             String
  home                Home @relation(fields: [homeId], references: [id])
  homeId              String @db.ObjectId
  //message sender by a buyer user
  buyer               User @relation("BuyerMessages", fields: [buyerId], references: [id])
  buyerId             String @db.ObjectId
  //message sender by a realtor user
  realtor             User @relation("RealtorMessages", fields: [realtorId], references: [id])
  realtorId           String @db.ObjectId
}

enum PropertyType {
  RESIDENTIAL
  CONDO
}

enum UserType {
  BUYER
  REALTOR
  ADMIN
}
